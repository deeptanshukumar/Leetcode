/*
389. Find the Difference
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.*/


//XOR solution
#include <string>
using namespace std;
class Solution {
public:
    char findTheDifference(string s, string t) {
        char sstr = s[0];
        char tstr = t[0];
        for(int i=1;i<s.size();i++){
            sstr ^= s[i];
        }
        for(int i=1;i<t.size();i++){
            tstr ^= t[i];
        }
        return sstr^tstr;
        
        
    }
};

//Hashmap solution
#include <unordered_map>
#include <string>
using namespace std;
class Solution {
public:
    char findTheDifference(string s, string t) {
        char ans;
        unordered_map<char,int> mpp;
        for(auto i:s){
            mpp[i]++;
        }
        for(auto i:t){
            if(mpp[i]==0) ans=i;
            mpp[i]--;
        }
        return ans;
        
    }
};

//sorting solution
#include <string>
#include <algorithm>
using namespace std;
class Solution {
public:
    char findTheDifference(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());
        for(int i=0;i<s.size();i++){
            if(s[i]!=t[i]) return t[i];
        }
        return t[t.size()-1];
    }
};